<!DOCTYPE html>
<html>
<head>
    <title>
        <%= title %>
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" type="text/css" href="/css/all.css" />
    <link rel="stylesheet" type="text/css" href="/css/template-dashboard.css" />
    <link rel="stylesheet" type="text/css" href="/css/table.css" />
    <link rel="stylesheet" type="text/css" href="/css/modal.css" />
    <style type="text/css"></style>
    <script src="https://kit.fontawesome.com/65753c16c3.js" crossorigin="anonymous"></script>
</head>

<body>
    <header>
        <% include ../partials/header %>
    </header>
    <div class="templates body">
        <div id="tmp-header">
            <p class="title">
                <%= title %>
            </p>
            <div class="add-btn" onclick="openModal()">+ Create Template</div>
        </div>
        <div id="myModal" class="modal">
            <div class="modal-content template-modal">
                <div class="close-container">
                    <span class="close" onclick="closeModal()">&times;</span>
                </div>
                <p class="modal-title">Create a New Recommendation Template</p>
                <form class="input-form" method="GET" action="/template-editor">
                    <div class="template-name-cont">
                        <label class="input-label"> Template Name: </label>
                        <input class="input-text" type="text" name="title" autofocus>
                    </div>
                    <input class="input-submit" type="submit" value="Create">
                </form>
            </div>
        </div>
        <table id="templates-table0">
            <thead>
                <tr>
                    <td class="subtitle_cont">
                        <b class="subtitle">Recommendation Templates</b>
                    </td>
                    <td>
                    </td>
                </tr>
            </thead>
            <tbody>
                <% if (!templates.length)  { %>
                    <tr>
                        <td>
                            <div class="template-name">No Existing Recommendation Templates</div>
                        </td>
                    </tr>
                    <% } %>
            </tbody>
        </table>
        <div id="templates-page0">
            <div id="templates-buttons0">
                <button onclick="javascript:prevPage(0)" id="templates-button-prev0">Prev</button>
                <div id="templates-page-numbers0"></div>
                <button onclick="javascript:nextPage(0)" id="templates-button-next0">Next</button>
            </div>
        </div>
        <br>
        <br>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
</body>
<script type="text/javascript">
    var recommendation_button = document.getElementById("recommendation-button");
    recommendation_button.innerHTML = '<img src="/images/add_template.png" />';
</script>
<script>
    var current_page = [1, 1];
    var records_per_page = 5;
    var data = [
        JSON.parse(`<%- JSON.stringify(templates) %>`),
        JSON.parse(`<%- JSON.stringify(emailtemplates) %>`)
    ];
    // Get the modal
    var modal = document.getElementById('myModal');
    var modal_email = document.getElementById('myModal_email');

    // When the user clicks on the button, open the modal
    function openModal() {
        modal.style.display = "block";
    }

    function openEmailModal() {
        modal_email.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    function closeModal() {
        modal.style.display = "none";
    }

    function closeEmailModal() {
        modal_email.style.display = "none";
    }

    function displayMetrics(i) {
        var timesUsed = data[0][i].metric;
        var metricsHtml = `
        <div class="row text-center">
            <div class="col-xs-4 metric">
                <div class="row">
                    <div class="col-12">
                        <p class="metric-title">times used</p>
                        <p class="metric-text"> ${timesUsed} </p>
                    </div>
                </div>
            </div>
            <div class="col-xs-4 metric">
                <div class="row">
                    <div class="col-12">
                        <p class="metric-title">last used</p>
                        <p class="metric-text">10/12/2020</p>
                    </div>
                </div>
            </div>
            <div class="col-xs-4 metric">
                <div class="row">
                    <div class="col-12">
                        <p class="metric-title">created</p>
                        <p class="metric-text">5/13/2019</p>
                    </div>
                </div>
            </div>
        </div>`
        var popover = $('#metrics').attr('data-content', metricsHtml).data('bs.popover');

         //toggle the popover for metrics
        $(document).ready(function(){
            $('[data-toggle="popover"]').popover({
                placement: 'top',
                trigger: 'hover',
                html: true,
            });
        });
    }

    function editTemplate(id) {
        $.ajax({
            url: '/template-editor/edit',
            data: {
                id
            },
            type: 'GET',
            complete: function(data) {
                var params = data.responseJSON;
                console.log('complete');
                window.location.href = getDestinationRoute('/template-editor', params);
            },
            error: function() {
                console.log('error');
            }
        });
    }

    function editEmailTemplate(id) {
        $.ajax({
            url: '/email-template-editor/edit',
            data: {
                id
            },
            type: 'GET',
            complete: function(data) {
                var params = data.responseJSON;
                console.log('complete');
                window.location.href = getDestinationRoute('/email-template-editor', params);
            },
            error: function() {
                console.log('error');
            }
        });
    }

    // On click for trash icon
    function deleteRow(id) {
        $.ajax({
            url: '/template-dashboard/delete',
            data: {
                id
            },
            type: 'POST',
            complete: function() {
                console.log('complete');
                window.location.reload(false);
            },
            error: function() {
                console.log('error');
            }
        });
    }

    function deleteEmailRow(id) {
        $.ajax({
            url: '/template-dashboard/delete-email',
            data: {
                id
            },
            type: 'POST',
            complete: function() {
                console.log('complete');
                window.location.reload(false);
            },
            error: function() {
                console.log('error');
            }
        });
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    function getDestinationRoute(address, params) {
        return address + '?' + $.param(params);
    }

    // Decrement page number
    function prevPage(tableNumber) {
        if (current_page[tableNumber] > 1) {
            changePage(tableNumber, current_page[tableNumber] - 1);
        }
    }

    // Increment page number
    function nextPage(tableNumber) {
        if (current_page[tableNumber] < numPages(tableNumber)) {
            changePage(tableNumber, current_page[tableNumber] + 1);
        }
    }

    // Return total number of pages
    function numPages(tableNumber) {
        return Math.ceil(data[tableNumber].length / records_per_page);
    }

    // Change to the page number specified by the page parameter
    function changePage(tableNumber, page) {
        // Validate page
        if (page < 1) page = 1;
        if (page > numPages(tableNumber)) page = numPages(tableNumber);

        current_page[tableNumber] = page;

        // Enable/disable buttons
        setPageButtons(tableNumber);

        if (!data[tableNumber].length) {
            // Exit function if there are no recommendations to show
            return;
        }

        // Clear old table
        clearTable(tableNumber);

        // Generate new table
        generateTable(tableNumber);
    }

    function clearTable(tableNumber) {
        var table = document.getElementById("templates-table" + tableNumber);

        for (var i = table.rows.length - 1; i > 0; i--) {
            table.deleteRow(i);
        }
    }

    function generateTable(tableNumber) {
        var row_count = 1;

        for (var i = (current_page[tableNumber] - 1) * records_per_page; i < (current_page[tableNumber] * records_per_page); i++) {
            generateRow(row_count, i, tableNumber);
            row_count++;
        }
    }

    function generateRow(row_count, i, tableNumber) {
        if (i < data[tableNumber].length) {
            if (tableNumber == 0) {
                generateRecTemplateRow(row_count, i);
            } else if (tableNumber == 1) {
                generateEmailTemplateRow(row_count, i);
            }
        } else {
            generateBlankRow(row_count, tableNumber);
        }
    }

    function generateBlankRow(row_count, tableNumber) {
        var table = document.getElementById("templates-table" + tableNumber);
        var row = table.insertRow(row_count);
        var cells = [];

        for (var j = 0; j < 3; j++) {
            cells.push(row.insertCell(j));
            cells[j].innerHTML = "";
        }
    }

    function generateRecTemplateRow(row_count, i) {
        var table = document.getElementById("templates-table0");
        var row = table.insertRow(row_count);
        var cells = [row.insertCell(0), row.insertCell(1)];

        cells[0].innerHTML = data[0][i].name;
        cells[1].innerHTML = "<div class='actions' id='actions'>";
        
        var actions = document.getElementById('actions');
        actions.innerHTML += "<i class='fas fa-pencil-alt fa-lg' onclick='editTemplate(\"" + data[0][i]._id + "\")'></i>";
        actions.innerHTML += "<i class='fas fa-trash fa-lg' onclick='deleteRow(\"" + data[0][i]._id + "\")'></i>";
        actions.innerHTML += "<i id='metrics' class='fas fa-chart-bar fa-lg' data-trigger=\"hover\" data-toggle=\"popover\" title=\"Metrics\"></i></div>";
        displayMetrics(i);
    }

    function generateEmailTemplateRow(row_count, i) {
        var table = document.getElementById("templates-table1");
        var row = table.insertRow(row_count);
        var cells = [row.insertCell(0), row.insertCell(1)];

        cells[0].innerHTML = data[1][i].title;
        cells[1].innerHTML += "<img class='icon' src='/images/pencil.png' onclick='editEmailTemplate(" + JSON.stringify(data[1][i]) + ")'/>";
        cells[1].innerHTML = "<img class='icon' src='/images/delete.png' onclick='deleteEmailRow(\"" + data[1][i]._id + "\")'/>"
    }

    function setPageButtons(tableNumber) {
        var btn_prev = document.getElementById("templates-button-prev" + tableNumber);
        var btn_next = document.getElementById("templates-button-next" + tableNumber);

        if (current_page[tableNumber] == 1 || !data[tableNumber].length) {
            btn_prev.disabled = true;
        } else {
            btn_prev.disabled = false;
        }

        if (current_page[tableNumber] == numPages(tableNumber) || !data[tableNumber].length) {
            btn_next.disabled = true;
        } else {
            btn_next.disabled = false;
        }

        for (var i = 1; i <= numPages(tableNumber); i++) {
            if (i == current_page[tableNumber]) {
                document.getElementById("templates-page-" + tableNumber + '-' + i).disabled = true;
            } else {
                document.getElementById("templates-page-" + tableNumber + '-' + i).disabled = false;
            }
        }

    }

    function createPageButtons(tableNumber) {
        var page_numbers = document.getElementById("templates-page-numbers" + tableNumber);

        page_numbers.innerHTML = '';

        for (var i = 1; i <= numPages(tableNumber); i++) {
            page_numbers.innerHTML +=
                '<button id="templates-page-' + tableNumber + '-' + i + '" onclick="javascript:changePage(' +
                tableNumber + ', ' + i + ')">' + i + '</button>';
        }
    }

    createPageButtons(0);

    // Show page 1 initially
    changePage(0, 1);
</script>
</html>